{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/constants.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/utils.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const validConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n}\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst placesList = document.querySelector('.places__list');\r\n\r\nconst sectionProfile = document.querySelector('.profile');\r\nconst buttonEditProfile = sectionProfile.querySelector('.profile__edit-button');\r\nconst buttonAddNewCard = sectionProfile.querySelector('.profile__add-button');\r\n\r\nconst closePopupButtons = document.querySelectorAll('.popup__close');\r\n\r\nconst popupUpdateAvatar = document.querySelector('.popup_type_update-avatar');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\n\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\n\r\nconst popupConfirm = document.querySelector('.popup_type_confirm');\r\nconst formConfirm = document.forms.confirm;\r\n\r\nconst popupImage = document.querySelector('.popup_type_image');\r\nconst captionPopup = popupImage.querySelector('.popup__caption');\r\nconst imgOfPopup = popupImage.querySelector('.popup__image');\r\n\r\nconst formEditProfile = document.forms[\"edit-profile\"];\r\nconst nameInput = formEditProfile.elements.name;\r\nconst jobInput = formEditProfile.elements.description;\r\n\r\nconst formUpdateAvatar = document.forms[\"update-avatar\"];\r\nconst linkImageInput = formUpdateAvatar.elements['link-img'];\r\n\r\nconst formNewPlace = document.forms[\"new-place\"];\r\nconst namePlaceInput = formNewPlace.elements['place-name'];\r\nconst linkInput = formNewPlace.elements.link;\r\n\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileJob = document.querySelector('.profile__description');\r\n\r\nexport {\r\nvalidConfig,\r\ncardTemplate, // in card.js\r\nplacesList,\r\nbuttonEditProfile,\r\nbuttonAddNewCard,\r\nclosePopupButtons,\r\npopupUpdateAvatar,\r\npopupEdit,\r\npopupNewCard,\r\npopupConfirm,\r\nformConfirm, // in card.js\r\npopupImage,\r\ncaptionPopup,\r\nimgOfPopup,\r\nformEditProfile,\r\nnameInput,\r\njobInput,\r\nformUpdateAvatar,\r\nlinkImageInput,\r\nformNewPlace,\r\nnamePlaceInput,\r\nlinkInput,\r\nprofileImage,\r\nprofileTitle,\r\nprofileJob,\r\n}\r\n","function openModal (popup) {\r\n  popup.classList.add('popup_is-animated');\r\n  setTimeout(()=>{\r\n    popup.classList.add('popup_is-opened');\r\n  }, 1);\r\n  popup.addEventListener('click', closeOverlayPopup);\r\n  document.addEventListener('keydown', closeEscPopup);\r\n}\r\n\r\nfunction closeEscPopup (evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popupIsOpened = document.querySelector('.popup_is-opened');\r\n    closeModal(popupIsOpened);\r\n  }\r\n}\r\n\r\nfunction closeOverlayPopup (evt) {\r\n  if (evt.target === evt.currentTarget) {\r\n    closeModal(evt.currentTarget);\r\n  }\r\n}\r\n\r\nfunction closeModal (popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  popup.removeEventListener('click', closeOverlayPopup);\r\n  document.removeEventListener('keydown', closeEscPopup);\r\n}\r\n\r\nexport {openModal, closeModal};\r\n\r\n","import {closeModal} from './modal.js';\r\nimport {showError} from './index.js';\r\n\r\n//функция проверки ответа\r\nexport function checkResponse (res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\n//универсальная функция запроса fetch с проверкой ответа \r\nexport function request(url, option) {\r\n  return fetch (url, option).then(checkResponse) \r\n}\r\n\r\n// можно сделать универсальную функцию управления текстом кнопки с 3 и 4 необязательными аргументами\r\nexport function renderLoading(isLoading, button, buttonText='Сохранить', loadingText='Сохранение...') {\r\n  if (isLoading) {\r\n    button.textContent = loadingText\r\n  } else {\r\n    button.textContent = buttonText\r\n  }\r\n}\r\n\r\n// можно сделать универсальную функцию, которая принимает функцию запроса, объект события и текст во время загрузки\r\nexport function handleSubmit(request, evt, loadingText = \"Сохранение...\") {\r\n  // всегда нужно предотвращать перезагрузку формы при сабмите\r\n  evt.preventDefault();\r\n   // универсально получаем кнопку сабмита из `evt`\r\n  const submitButton = evt.submitter;\r\n   // записываем начальный текст кнопки до вызова запроса\r\n  const initialText = submitButton.textContent;\r\n   // изменяем текст кнопки до вызова запроса\r\n  renderLoading(true, submitButton, initialText, loadingText);\r\n  request()\r\n    .then(() => {\r\n       // любую форму нужно очищать после успешного ответа от сервера\r\n       // а также `reset` может запустить деактивацию кнопки сабмита (смотрите в `validate.js`)\r\n      evt.target.reset();\r\n      closeModal(evt.target.closest('.popup'));\r\n    })\r\n    .catch(console.error)\r\n     // в каждом запросе в `finally` нужно возвращать обратно начальный текст кнопки\r\n    .finally(() => {\r\n      renderLoading(false, submitButton, initialText);\r\n    });\r\n}","import {request} from './utils.js';\r\n\r\nconst config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-7',\r\n  headers: {\r\n    authorization: 'b27457ff-8e1d-494d-8bc0-af82cbd7f253',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n//Promise запроса данных пользователя \r\nfunction getUser () {\r\n  return request(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\n//Promise запроса карточек \r\nfunction getInitialCards () {\r\n  return request(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на обновление данных о пользователе на сервере\r\nfunction editeProfileServer (nameUser, aboutUser) {\r\n  return request(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${nameUser}`,\r\n      about: `${aboutUser}`\r\n    })\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на добавление новой карточки на сервер\r\nfunction addNewPlaceServer (namePlace, link) {\r\n  return request(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${namePlace}`,\r\n      link: `${link}`\r\n    })\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на удаление карточки на сервер\r\nfunction deleteCardServer (cardId) {\r\n  return request(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на добавление like на сервер\r\nfunction addLikeServer (card) {\r\n  return request(`${config.baseUrl}/cards/likes/${card['_id']}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на удаление like на сервер\r\nfunction deleteLikeServer (card) {\r\n  return request(`${config.baseUrl}/cards/likes/${card['_id']}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на смену аватара на сервер\r\nfunction updateAvatarServer (valuelinkImage) {\r\n    return request(`${config.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n        avatar: `${valuelinkImage}`\r\n      })\r\n    })\r\n}\r\n\r\n//Функция, проверяющая, что ссылка на картинку\r\nfunction validateLinkImg (valuelinkImage) {\r\n  return fetch(`https://corsproxy.org/?${valuelinkImage}`, {\r\n    method: 'HEAD'\r\n  })\r\n  .then ((res) => {\r\n    if (res.ok) {\r\n      return res.headers\r\n    }\r\n  return Promise.reject(`Запрос на изменение аватара не выполнен, ошибка: ${res.status}`);\r\n  })\r\n  .then ((headers) => {\r\n    if (headers.get('Content-type').includes('image')) {\r\n      return updateAvatarServer (valuelinkImage)\r\n    }\r\n  return Promise.reject(`Ссылка не на изображение, ошибка: ${res.status}`);\r\n  })\r\n}\r\n\r\nexport {\r\n  getUser, \r\n  getInitialCards, \r\n  editeProfileServer, \r\n  addNewPlaceServer, \r\n  deleteCardServer, \r\n  addLikeServer, \r\n  deleteLikeServer,\r\n  updateAvatarServer,\r\n  validateLinkImg\r\n}","import {cardTemplate} from './constants.js';\r\nimport {addLikeServer, deleteLikeServer} from './api.js';\r\n\r\nfunction delCard (cardItem) {\r\n  cardItem.remove();\r\n}\r\n\r\nfunction likeCard (bttnLike) {\r\n  bttnLike.classList.toggle('card__like-button_is-active');\r\n}\r\n\r\nfunction getCardTemplate (templateCard) {\r\n  return templateCard.querySelector('.places__item').cloneNode(true);\r\n}\r\n\r\nfunction deletebuttonCardDel (cardUserId, userId, buttonCardDel) {\r\n  if (cardUserId !== userId) {\r\n    buttonCardDel.remove()\r\n  }\r\n}\r\n\r\nfunction setCurrentStatusMyLike (card, userId, buttonlikeCard) {\r\n  if (checkMyLike (card, userId)) {\r\n    buttonlikeCard.classList.add('card__like-button_is-active');\r\n  } else {\r\n    buttonlikeCard.classList.remove('card__like-button_is-active');\r\n  }\r\n}\r\n\r\nfunction checkMyLike (card, userId) {\r\n  const likes = card.likes;\r\n  return likes.some ((like) => {\r\n    if (like['_id'] === userId) {\r\n      return true;\r\n    }\r\n    return false;\r\n  })\r\n}\r\n\r\nfunction changeStatusMyLike (likeConfig) {\r\n  const {card, buttonlikeCard, likeCounter, likeCard} = likeConfig;\r\n  if (buttonlikeCard.classList.contains('card__like-button_is-active')) {\r\n    deleteLikeServer (card)\r\n      .then ((updatedСard) => {\r\n        likeCard(buttonlikeCard);\r\n        likeCounter.textContent = updatedСard.likes.length;\r\n      })\r\n      .catch(console.error)\r\n  } else {\r\n    addLikeServer (card)\r\n      .then ((updatedСard) => {\r\n        likeCard(buttonlikeCard);\r\n        likeCounter.textContent = updatedСard.likes.length;\r\n      })\r\n      .catch(console.error)\r\n    }\r\n}\r\n\r\nfunction createCard(cardConfig) {\r\n  const {card, userId, openPopupImg, likeCard, handleDelete} = cardConfig;\r\n  const cardElement = getCardTemplate(cardTemplate);\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const imgCard = cardElement.querySelector('.card__image');\r\n  const buttonCardDel = cardElement.querySelector('.card__delete-button');\r\n  const buttonlikeCard = cardElement.querySelector('.card__like-button');\r\n  const likeCounter = cardElement.querySelector('.card__like-counter');\r\n  const idUserCreateCard = card.owner['_id'];\r\n  const counterLikes = card.likes.length;\r\n\r\n  cardElement.id = card['_id'];\r\n\r\n  cardTitle.textContent = `${card.name}`;\r\n  likeCounter.textContent = `${counterLikes}`;\r\n  imgCard.src = `${card.link}`;\r\n  imgCard.alt = `Фото: ${card.name}`;\r\n  imgCard.addEventListener('click', () => {\r\n    openPopupImg(card.name, card.link);\r\n  });\r\n\r\n  buttonCardDel.addEventListener('click', handleDelete)\r\n  \r\n  buttonlikeCard.addEventListener('click', (evt) => {\r\n    changeStatusMyLike ({card, buttonlikeCard: evt.target, likeCounter, likeCard});\r\n  });\r\n\r\n  deletebuttonCardDel (idUserCreateCard, userId, buttonCardDel); //Удалили иконку кнопки удаления на карточке\r\n  setCurrentStatusMyLike (card, userId, buttonlikeCard) //Установили текущий статус моего лайка\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport {createCard, delCard, likeCard};","const showInputError = (formElement, inputElement, errorConfig, errorMessage) => {\r\n  const {inputErrorClass, errorClass} = errorConfig;\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, errorConfig, inputElement) => {\r\n  const {inputErrorClass, errorClass} = errorConfig;\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(inputErrorClass);\r\n  errorElement.classList.remove(errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst checkInputValidityPattern = (inputElement) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n      inputElement.setCustomValidity('');\r\n  }\r\n}\r\n\r\nconst checkInputValidity = (formElement, inputElement, errorConfig) => {\r\n  checkInputValidityPattern(inputElement);\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, errorConfig, inputElement.validationMessage);\r\n  } else {\r\n    hideInputError(formElement, errorConfig, inputElement);\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !(inputElement.validity.valid);\r\n  });\r\n}\r\n\r\nfunction disableButton (submitButton, inactiveButtonClass) {\r\n  submitButton.classList.add(inactiveButtonClass);\r\n  submitButton.setAttribute('disabled', true);\r\n}\r\n\r\nconst toggleButtonState = (inputList, submitButton, inactiveButtonClass) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    disableButton (submitButton, inactiveButtonClass);\r\n  } else {\r\n      submitButton.classList.remove(inactiveButtonClass);\r\n      submitButton.removeAttribute('disabled', true);\r\n  }\r\n}\r\n\r\nconst hasInputElement = (elements) => {\r\n  return elements.some((element) => {\r\n    return element.classList.contains('popup__input');\r\n  });\r\n}\r\n//Функция, которая вешает слушатель события reset, только на те формы, у которых есть inputElement\r\n//На кнопку, у popup confirm, слушатель не повесится, иначе нельзя будет удалить несколько карточек сподряд\r\nfunction addListenerReset (formElement, submitButton, inactiveButtonClass) {\r\n  const elements = Array.from(formElement.elements);\r\n  if (hasInputElement (elements)) {\r\n    formElement.addEventListener('reset', () => {\r\n      disableButton(submitButton, inactiveButtonClass,)\r\n    });\r\n  }\r\n}\r\n\r\nconst setEventListeners = (formElement, formConfig) => {\r\n  const {inputSelector, submitButtonSelector, inactiveButtonClass, ...errorConfig} = formConfig;\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  const submitButton = formElement.querySelector(submitButtonSelector);\r\n  toggleButtonState(inputList, submitButton, inactiveButtonClass);\r\n  addListenerReset (formElement, submitButton, inactiveButtonClass);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, errorConfig);\r\n      toggleButtonState(inputList, submitButton, inactiveButtonClass);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const {formSelector, ...formConfig} = validationConfig;\r\n  const formList = Array.from(document.querySelectorAll(formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, formConfig);\r\n  });\r\n};\r\n\r\nexport function clearValidation (formElement, validationConfig) {\r\n  const {submitButtonSelector, inputSelector, inactiveButtonClass, ...errorConfig} = validationConfig;\r\n  const submitButton = formElement.querySelector(submitButtonSelector);\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, errorConfig, inputElement)\r\n    inputElement.setCustomValidity('');\r\n  });\r\n  toggleButtonState(inputList, submitButton, inactiveButtonClass);\r\n}\r\n\r\n","import '../pages/index.css'; // импорт главного файла стилей\r\nimport {createCard, delCard, likeCard} from './card.js';\r\nimport {openModal, closeModal} from './modal.js';\r\nimport {enableValidation, clearValidation} from './validation.js';\r\nimport {getUser, getInitialCards, editeProfileServer, addNewPlaceServer, deleteCardServer,validateLinkImg} from './api.js';\r\nimport {handleSubmit} from './utils.js';\r\nimport {\r\n  validConfig,\r\n  placesList,\r\n  buttonEditProfile,\r\n  buttonAddNewCard,\r\n  popupUpdateAvatar,\r\n  closePopupButtons,\r\n  popupEdit,\r\n  popupNewCard,\r\n  popupConfirm,\r\n  formConfirm,\r\n  popupImage,\r\n  captionPopup,\r\n  imgOfPopup,\r\n  formEditProfile,\r\n  nameInput,\r\n  jobInput,\r\n  formUpdateAvatar,\r\n  linkImageInput,\r\n  formNewPlace,\r\n  namePlaceInput,\r\n  linkInput,\r\n  profileImage,\r\n  profileTitle,\r\n  profileJob,\r\n  } from './constants.js'\r\n\r\nfunction handleDelete (evt) {\r\n  const cardElement = evt.target.closest('.card');\r\n  popupConfirm.dataset.cardId = cardElement.id;\r\n  openModal (popupConfirm); \r\n}\r\n\r\n//Обработчик открытия popup с img - начало\r\nfunction openPopupImg (cardName, cardLink) {\r\n  imgOfPopup.src = cardLink;\r\n  imgOfPopup.alt = cardName;\r\n  captionPopup.textContent = cardName;\r\n  openModal(popupImage);\r\n}\r\n\r\n//Активация валидации\r\nenableValidation(validConfig);\r\n\r\n//Открытие и редактирование профиля - начало\r\nbuttonEditProfile.addEventListener('click', () => {\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileJob.textContent;\r\n  clearValidation (formEditProfile, validConfig);\r\n  openModal(popupEdit); \r\n});\r\nfunction handleProfileFormSubmit(evt) {\r\n  const valueName = nameInput.value;\r\n  const valueJob = jobInput.value;\r\n  // создаем функцию, которая возвращает промис, так как любой запрос возвращает его \r\n  function makeRequest() {\r\n    // return позволяет потом дальше продолжать цепочку `then, catch, finally`\r\n    return editeProfileServer (valueName, valueJob).then((userData) => {\r\n      profileTitle.textContent = userData.name;\r\n      profileJob.textContent = userData.about;\r\n    });\r\n  }\r\n  // вызываем универсальную функцию, передавая в нее запрос, событие и текст изменения кнопки (если нужен другой, а не `\"Сохранение...\"`)\r\n  handleSubmit(makeRequest, evt);\r\n}\r\nformEditProfile.addEventListener('submit', handleProfileFormSubmit);\r\n\r\n//Обновление аватара - начало\r\nprofileImage.addEventListener('click', () => {\r\n  openModal(popupUpdateAvatar);\r\n});\r\nfunction handleUpdateAvatarFormSubmit(evt) {\r\n  const valuelinkImage = linkImageInput.value;\r\n  function makeRequest () {\r\n    return validateLinkImg (valuelinkImage).then ((newLinkImg) => {\r\n      profileImage.style = `background-image: url(${newLinkImg.avatar})`;\r\n    })\r\n  }\r\n  handleSubmit(makeRequest, evt)\r\n}\r\nformUpdateAvatar.addEventListener('submit', handleUpdateAvatarFormSubmit);\r\n\r\n//Открытие и добавление новой карточки - начало\r\nbuttonAddNewCard.addEventListener('click', () => {\r\n  openModal(popupNewCard);\r\n});\r\nfunction handleNewPlaceFormSubmit(evt) {\r\n  const valueNamePlace = namePlaceInput.value;\r\n  const valueLink = linkInput.value;\r\n  function makeRequest () {\r\n    return addNewPlaceServer (valueNamePlace, valueLink).then((newCard) => {\r\n      placesList.prepend(createCard({card:newCard, userId:newCard.owner['_id'], openPopupImg, likeCard, handleDelete}));\r\n    }) \r\n  }\r\n  handleSubmit(makeRequest, evt)\r\n}\r\nformNewPlace.addEventListener('submit', handleNewPlaceFormSubmit);\r\n\r\n//Подтверждение удаления карточки - начало\r\nfunction handleConfirmFormSubmit(evt) {\r\n  const loadingText = \"Удаление...\"\r\n  const cardId = popupConfirm.dataset.cardId;\r\n  const card = placesList.querySelector(`[id=\"${cardId}\"]`);\r\n  function makeRequest () {\r\n    return deleteCardServer(cardId).then (() => {\r\n      delCard(card);\r\n    })\r\n  }\r\n  handleSubmit(makeRequest, evt, loadingText);\r\n}\r\nformConfirm.addEventListener('submit', handleConfirmFormSubmit);\r\n\r\nfunction closePopup (evt) {\r\n  const popupElement = evt.target.closest('.popup');\r\n  closeModal(popupElement);\r\n}\r\n\r\nclosePopupButtons.forEach((closePopupButton) => {\r\n  closePopupButton.addEventListener('click', closePopup);\r\n});\r\n\r\n//Загрузка карточек и данных пользователя с сервера при открытии страницы - начало\r\nPromise.all([getUser(), getInitialCards()])\r\n  .then (([user, cards]) => {\r\n    profileImage.style = `background-image: url(${user.avatar})`;\r\n    profileTitle.textContent = `${user.name}`;\r\n    profileJob.textContent = `${user.about}`\r\n\r\n    cards.forEach( card => {\r\n      const cardElement = createCard({card, userId:user['_id'], openPopupImg, likeCard, handleDelete});\r\n      \r\n      placesList.append(cardElement)\r\n      \r\n    })\r\n  })\r\n  .catch(console.error)\r\n"],"names":["validConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","cardTemplate","document","querySelector","content","placesList","sectionProfile","buttonEditProfile","buttonAddNewCard","closePopupButtons","querySelectorAll","popupUpdateAvatar","popupEdit","popupNewCard","popupConfirm","formConfirm","forms","confirm","popupImage","captionPopup","imgOfPopup","formEditProfile","nameInput","elements","name","jobInput","description","formUpdateAvatar","linkImageInput","formNewPlace","namePlaceInput","linkInput","link","profileImage","profileTitle","profileJob","openModal","popup","classList","add","setTimeout","addEventListener","closeOverlayPopup","closeEscPopup","evt","key","closeModal","target","currentTarget","remove","removeEventListener","checkResponse","res","ok","json","Promise","reject","concat","status","request","url","option","fetch","then","renderLoading","isLoading","button","buttonText","arguments","length","undefined","loadingText","textContent","handleSubmit","preventDefault","submitButton","submitter","initialText","reset","closest","catch","console","error","finally","config","baseUrl","headers","authorization","likeCard","bttnLike","toggle","createCard","cardConfig","card","userId","openPopupImg","handleDelete","cardElement","cloneNode","cardTitle","imgCard","buttonCardDel","buttonlikeCard","likeCounter","idUserCreateCard","owner","counterLikes","likes","id","src","alt","likeConfig","contains","method","deleteLikeServer","updatedСard","addLikeServer","changeStatusMyLike","cardUserId","deletebuttonCardDel","some","like","checkMyLike","setCurrentStatusMyLike","hideInputError","formElement","errorConfig","inputElement","errorElement","disableButton","setAttribute","validationConfig","formConfig","toggleButtonState","inputList","validity","valid","hasInvalidInput","removeAttribute","dataset","cardId","cardName","cardLink","closePopup","_objectWithoutProperties","Array","from","forEach","_excluded","element","addListenerReset","patternMismatch","setCustomValidity","errorMessage","checkInputValidityPattern","showInputError","validationMessage","checkInputValidity","setEventListeners","value","_excluded3","clearValidation","valueName","valueJob","nameUser","aboutUser","body","JSON","stringify","about","userData","valuelinkImage","get","includes","avatar","updateAvatarServer","validateLinkImg","newLinkImg","style","valueNamePlace","valueLink","namePlace","newCard","prepend","deleteCardServer","closePopupButton","all","_ref","_ref2","user","cards","append"],"sourceRoot":""}