{"version":3,"file":"main.js","mappings":"mBAAA,IAAMA,EAAc,CAClBC,aAAc,eACdC,cAAe,gBACfC,qBAAsB,iBACtBC,oBAAqB,yBACrBC,gBAAiB,0BACjBC,WAAY,wBAGRC,EAAeC,SAASC,cAAc,kBAAkBC,QACxDC,EAAaH,SAASC,cAAc,iBAEpCG,EAAiBJ,SAASC,cAAc,YACxCI,EAAoBD,EAAeH,cAAc,yBACjDK,EAAmBF,EAAeH,cAAc,wBAEhDM,EAAoBP,SAASC,cAAc,6BAC3CO,EAA6BD,EAAkBN,cAAc,iBAE7DQ,EAAYT,SAASC,cAAc,oBACnCS,EAAqBD,EAAUR,cAAc,iBAE7CU,EAAeX,SAASC,cAAc,wBACtCW,EAAwBD,EAAaV,cAAc,iBAEnDY,EAAeb,SAASC,cAAc,uBACtCa,EAAwBD,EAAaZ,cAAc,iBACnDc,EAAcf,SAASC,cAAc,sBAErCe,EAAahB,SAASC,cAAc,qBACpCgB,EAAeD,EAAWf,cAAc,mBACxCiB,EAAaF,EAAWf,cAAc,iBACtCkB,EAAsBH,EAAWf,cAAc,iBAE/CmB,EAAkBpB,SAASC,cAAc,2BACzCoB,EAAYD,EAAgBE,SAASC,KACrCC,EAAWJ,EAAgBE,SAASG,YAEpCC,EAAmB1B,SAASC,cAAc,4BAC1C0B,EAAiBD,EAAiBJ,SAAS,YAE3CM,EAAe5B,SAASC,cAAc,wBACtC4B,EAAiBD,EAAaN,SAAS,cACvCQ,EAAYF,EAAaN,SAASS,KAElCC,EAAehC,SAASC,cAAc,mBACtCgC,EAAejC,SAASC,cAAc,mBACtCiC,EAAalC,SAASC,cAAc,yBC/C1C,SAASkC,EAAeC,GACN,WAAZA,EAAIC,KAENC,EADsBtC,SAASC,cAAc,oBAGjD,CAEA,SAASsC,EAAmBH,GACtBA,EAAII,SAAWJ,EAAIK,eACrBH,EAAWF,EAAIK,cAEnB,CAEA,SAASC,EAAWC,GAClBA,EAAMC,UAAUC,IAAI,kBAAmB,qBACvCF,EAAMG,iBAAiB,QAASP,GAChCvC,SAAS8C,iBAAiB,UAAWX,EACvC,CAEA,SAASG,EAAYK,GACnBA,EAAMC,UAAUG,OAAO,mBACvBJ,EAAMK,oBAAoB,QAAST,GACnCvC,SAASgD,oBAAoB,UAAWb,EAC1C,CCpBO,SAASc,EAAeC,GAC7B,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,WAADC,OAAYL,EAAIM,QACvC,CAGO,SAASC,EAAQC,EAAKC,GAC3B,OAAOC,MAAOF,EAAKC,GAAQE,KAAKZ,EAClC,CAGO,SAASa,EAAcC,EAAWC,GAA6D,IAArDC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,YAAaG,EAAWH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,gBAEjFF,EAAOM,YADLP,EACmBM,EAEAJ,CAEzB,CAGO,SAASM,EAAad,EAASrB,GAAoC,IAA/BiC,EAAWH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,gBAEvD9B,EAAIoC,iBAEJ,IAAMC,EAAerC,EAAIsC,UAEnBC,EAAcF,EAAaH,YAEjCR,GAAc,EAAMW,EAAcE,EAAaN,GAC/CZ,IACGI,MAAK,WAGJzB,EAAII,OAAOoC,QACXtC,EAAWF,EAAII,OAAOqC,QAAQ,UAChC,IACCC,OAAM,SAACC,GAENC,QAAQC,MAAM,WAAD1B,OAAYwB,GAC3B,IAECG,SAAQ,WACPpB,GAAc,EAAOW,EAAcE,EACrC,GACJ,CC/CA,IAAMQ,EAAS,CACbC,QAAS,2CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBCEpB,SAASC,EAAUC,GACjBA,EAAS5C,UAAU6C,OAAO,8BAC5B,CAoDA,SAASC,EAAWC,EAAMC,EAAQC,EAAgBN,GAChD,IAAMO,EAA8B/F,EAlDhBE,cAAc,iBAAiB8F,WAAU,GAmDvDC,EAAYF,EAAY7F,cAAc,gBACtCgG,EAAUH,EAAY7F,cAAc,gBACpCiG,EAAgBJ,EAAY7F,cAAc,wBAC1CkG,EAAiBL,EAAY7F,cAAc,sBAC3CmG,EAAcN,EAAY7F,cAAc,uBACxCoG,EAAmBV,EAAKW,MAAW,IACnCC,EAAeZ,EAAKa,MAAMrC,OAsBhC,OApBA2B,EAAYW,GAAKd,EAAU,IAE3BK,EAAU1B,YAAc,GAAHf,OAAMoC,EAAKpE,MAChC6E,EAAY9B,YAAc,GAAHf,OAAMgD,GAC7BN,EAAQS,IAAM,GAAHnD,OAAMoC,EAAK5D,MACtBkE,EAAQU,IAAM,SAAHpD,OAAYoC,EAAKpE,MAC5B0E,EAAQnD,iBAAiB,QAAS+C,GAElCK,EAAcpD,iBAAiB,SAAS,WACtCjC,EAAa+F,QAAQC,OAASf,EAAYW,GAC1C/D,EAAW7B,EACb,IAEAsF,EAAerD,iBAAiB,SAAS,SAACV,IA7C5C,SAA6BuD,EAAMQ,EAAgBC,EAAab,GAC1DY,EAAevD,UAAUkE,SAAS,+BDwBxC,SAA2BnB,GACzB,OAAOlC,EAAQ,GAADF,OAAI4B,EAAOC,QAAO,iBAAA7B,OAAgBoC,EAAU,KAAK,CAC7DoB,OAAQ,SACR1B,QAASF,EAAOE,SAEpB,CC5BI2B,CAAkBrB,GACf9B,MAAM,SAACoD,GACN1B,EAASY,GACTC,EAAY9B,YAAc2C,EAAYT,MAAMrC,MAC9C,IACCW,OAAM,SAACC,GACNC,QAAQkC,IAAI,WAAD3D,OAAYwB,GACzB,IDQN,SAAwBY,GACtB,OAAOlC,EAAQ,GAADF,OAAI4B,EAAOC,QAAO,iBAAA7B,OAAgBoC,EAAU,KAAK,CAC7DoB,OAAQ,MACR1B,QAASF,EAAOE,SAEpB,CCXI8B,CAAexB,GACZ9B,MAAM,SAACoD,GACN1B,EAASY,GACTC,EAAY9B,YAAc2C,EAAYT,MAAMrC,MAC9C,IACCW,OAAM,SAACC,GACNC,QAAQkC,IAAI,WAAD3D,OAAYwB,GACzB,GAEN,CA0BIqC,CAAoBzB,EAAMvD,EAAII,OAAQ4D,EAAab,EACrD,IAvEF,SAA8B8B,EAAYzB,EAAQM,GAC5CmB,IAAezB,GACjBM,EAAcnD,QAElB,CAqEEuE,CAAqBjB,EAAkBT,EAAQM,GAnEjD,SAAiCP,EAAMC,EAAQO,IAQ/C,SAAsBR,EAAMC,GAE1B,OADcD,EAAKa,MACNe,MAAM,SAACC,GAClB,OAAIA,EAAU,MAAM5B,CAItB,GACF,CAfM6B,CAAa9B,EAAMC,GAGrBO,EAAevD,UAAUG,OAAO,+BAFhCoD,EAAevD,UAAUC,IAAI,8BAIjC,CA8DE6E,CAAwB/B,EAAMC,EAAQO,GAE/BL,CACT,C,0fC7FA,IAiEiC6B,EACxBlI,EAAiBmI,EA1DpBC,EAAiB,SAACC,EAAaC,EAAaC,GAChD,IAAOnI,EAA+BkI,EAA/BlI,gBAAiBC,EAAciI,EAAdjI,WAClBmI,EAAeH,EAAY7H,cAAc,IAADsD,OAAKyE,EAAavB,GAAE,WAClEuB,EAAapF,UAAUG,OAAOlD,GAC9BoI,EAAarF,UAAUG,OAAOjD,GAC9BmI,EAAa3D,YAAc,EAC7B,EA0BM4D,EAAoB,SAACC,EAAWC,EAAexI,IAN7B,SAACuI,GACvB,OAAOA,EAAUZ,MAAK,SAACS,GACrB,OAASA,EAAaK,SAASC,KACjC,GACF,CAGMC,CAAgBJ,IAIlBC,EAAcxF,UAAUG,OAAOnD,GAC/BwI,EAAcI,gBAAgB,YAAY,KAJ1CJ,EAAcxF,UAAUC,IAAIjD,GAC5BwI,EAAcK,aAAa,YAAY,GAK3C,EAyBO,SAASC,EAAiBZ,EAAaH,GAC5C,IAAOhI,EAA4EgI,EAA5EhI,qBAAsBD,EAAsDiI,EAAtDjI,cAAeE,EAAuC+H,EAAvC/H,oBAAwBmI,EAAWY,EAAIhB,EAAgBiB,GAC7FR,EAAgBN,EAAY7H,cAAcN,GAC1CwI,EAAYU,MAAMC,KAAKhB,EAAYiB,iBAAiBrJ,IAC1DyI,EAAUa,SAAQ,SAAChB,GACjBH,EAAeC,EAAaC,EAAaC,GACzCA,EAAaiB,kBAAkB,GACjC,IACAf,EAAkBC,EAAWC,EAAexI,EAC9C,CC5CA,SAASsJ,EAAc9G,GACrBlB,EAAWwF,IAAMtE,EAAII,OAAOkE,IAC5BxF,EAAWyF,IAAMvE,EAAII,OAAOmE,IAC5B1F,EAAaqD,YAAclC,EAAII,OAAOqC,QAAQ,iBAAiBP,YAC/D5B,EAAU1B,EACZ,CAgFA,SAASmI,EAAuB/G,GAC9BE,EAAWF,EAAII,OAAOqC,QAAQ,UAChC,CD3DSpF,GADwBkI,ECnBhBnI,GDoBRC,aAAiBmI,EAAUe,EAAIhB,E,kBACrBkB,MAAMC,KAAK9I,SAAS+I,iBAAiBtJ,IAC7CuJ,SAAQ,SAAClB,IAlBM,SAACA,EAAaF,GACtC,IAAOlI,EAA4EkI,EAA5ElI,cAAeC,EAA6DiI,EAA7DjI,qBAAsBC,EAAuCgI,EAAvChI,oBAAwBmI,EAAWY,EAAIf,EAAUwB,GACvFjB,EAAYU,MAAMC,KAAKhB,EAAYiB,iBAAiBrJ,IACpD0I,EAAgBN,EAAY7H,cAAcN,GAChDuI,EAAkBC,EAAWC,EAAexI,GAE5CuI,EAAUa,SAAQ,SAAChB,GACjBA,EAAalF,iBAAiB,SAAS,YAjChB,SAACgF,EAAaE,EAAcD,IARrB,SAACC,GAC7BA,EAAaK,SAASgB,gBACxBrB,EAAaiB,kBAAkBjB,EAAapB,QAAQ0C,cAElDtB,EAAaiB,kBAAkB,GAErC,CAGEM,CAA0BvB,GAErBA,EAAaK,SAASC,MAGzBT,EAAeC,EAAaC,EAAaC,GA9BtB,SAACF,EAAaE,EAAcD,EAAauB,GAC9D,IAAOzJ,EAA+BkI,EAA/BlI,gBAAiBC,EAAciI,EAAdjI,WAClBmI,EAAeH,EAAY7H,cAAc,IAADsD,OAAKyE,EAAavB,GAAE,WAClEuB,EAAapF,UAAUC,IAAIhD,GAC3BoI,EAAa3D,YAAcgF,EAC3BrB,EAAarF,UAAUC,IAAI/C,EAC7B,CAsBI0J,CAAe1B,EAAaE,EAAcD,EAAaC,EAAayB,kBAIxE,CA0BMC,CAAmB5B,EAAaE,EAAcD,GAE9CG,EAAkBC,EAAWC,EAAexI,EAC9C,GACF,GACF,CAMI+J,CAAkB7B,EAAaF,EACjC,ICrBFvH,EAAkByC,iBAAiB,SAAS,WAC1CzB,EAAUuI,MAAQ3H,EAAaqC,YAC/B9C,EAASoI,MAAQ1H,EAAWoC,YAC5BoE,EAAiBtH,EAAiB5B,GAClCkD,EAAUjC,EACZ,IAgBAW,EAAgB0B,iBAAiB,UAdjC,SAAiCV,GAC/B,IAAMyH,EAAYxI,EAAUuI,MACtBE,EAAWtI,EAASoI,MAU1BrF,GARA,WAEE,OHrCyBwF,EGqCEF,EHrCQG,EGqCGF,EHpCjCrG,EAAQ,GAADF,OAAI4B,EAAOC,QAAO,aAAa,CAC3C2B,OAAQ,QACR1B,QAASF,EAAOE,QAChB4E,KAAMC,KAAKC,UAAU,CACnB5I,KAAM,GAAFgC,OAAKwG,GACTK,MAAO,GAAF7G,OAAKyG,QG+BoCnG,MAAK,SAACwG,GACpDpI,EAAaqC,YAAc+F,EAAS9I,KACpCW,EAAWoC,YAAc+F,EAASD,KACpC,IHxCJ,IAA6BL,EAAUC,CGyCrC,GAE0B5H,EAC5B,IAIAJ,EAAac,iBAAiB,SAAS,WACrCnB,EAAeiI,MAAQ,GACvBlB,EAAiBhH,EAAkBlC,GACnCkD,EAAUnC,EACZ,IAUAmB,EAAiBoB,iBAAiB,UATlC,SAAsCV,GACpC,IAAMkI,EAAiB3I,EAAeiI,MAMtCrF,GALA,WACE,OHGJ,SAA0B+F,GACxB,OAAO1G,MAAM,0BAADL,OAA2B+G,GAAkB,CACvDvD,OAAQ,SAETlD,MAAM,SAACX,GACN,OAAIA,EAAIC,GACCD,EAAImC,QAERhC,QAAQC,OAAO,+BAADC,OAAgCL,EAAIM,QACzD,IACCK,MAAM,SAACwB,GACN,OAAIA,EAAQkF,IAAI,gBAAgBC,SAAS,SAtB7C,SAA6BF,GACzB,OAAO7G,EAAQ,GAADF,OAAI4B,EAAOC,QAAO,oBAAoB,CAClD2B,OAAQ,QACR1B,QAASF,EAAOE,QAChB4E,KAAMC,KAAKC,UAAU,CACnBM,OAAQ,GAAFlH,OAAK+G,MAGnB,CAeaI,CAAoBJ,GAExBjH,QAAQC,OAAO,qCAADC,OAAsCL,IAAIM,QAC/D,GACF,CGnBWmH,CAAiBL,GAAgBzG,MAAM,SAAC+G,GAC7C5I,EAAa6I,MAAQ,yBAAHtH,OAA4BqH,EAAWH,OAAM,IACjE,GACF,GAC0BrI,EAC5B,IAIA9B,EAAiBwC,iBAAiB,SAAS,WACzCjB,EAAe+H,MAAQ,GACvB9H,EAAU8H,MAAQ,GAClBlB,EAAiB9G,EAAcpC,GAC/BkD,EAAU/B,EACZ,IAWAiB,EAAakB,iBAAiB,UAV9B,SAAkCV,GAChC,IAAM0I,EAAiBjJ,EAAe+H,MAChCmB,EAAYjJ,EAAU8H,MAM5BrF,GALA,WACE,OH/DwByG,EG+DEF,EH/DS/I,EG+DOgJ,EH9DrCtH,EAAQ,GAADF,OAAI4B,EAAOC,QAAO,UAAU,CACxC2B,OAAQ,OACR1B,QAASF,EAAOE,QAChB4E,KAAMC,KAAKC,UAAU,CACnB5I,KAAM,GAAFgC,OAAKyH,GACTjJ,KAAM,GAAFwB,OAAKxB,QGyD0C8B,MAAK,SAACoH,GACzD9K,EAAW+K,QAAQxF,EAAWuF,EAASA,EAAQ3E,MAAW,IAAG4C,EAAc3D,GAC7E,IHjEJ,IAA4ByF,EAAWjJ,CGkErC,GAC0BK,EAC5B,IAeArB,EAAY+B,iBAAiB,UAX7B,SAAiCV,GAC/B,IACMyE,EAAShG,EAAa+F,QAAQC,OAC9BlB,EAAOxF,EAAWF,cAAc,QAADsD,OAASsD,EAAM,OAMpDtC,GALA,WACE,OHjEJ,SAA2BsC,GACzB,OAAOpD,EAAQ,GAADF,OAAI4B,EAAOC,QAAO,WAAA7B,OAAUsD,GAAU,CAClDE,OAAQ,SACR1B,QAASF,EAAOE,SAEpB,CG4DW8F,CAAiBtE,GAAQhD,MAAM,WAC5B8B,EF9GH5C,QE+GP,GACF,GAC0BX,EARN,cAStB,IAOA1B,EAAmBoC,iBAAiB,QAASqG,GAC7CvI,EAAsBkC,iBAAiB,QAASqG,GAChDhI,EAAoB2B,iBAAiB,QAASqG,GAC9C3I,EAA2BsC,iBAAiB,QAASqG,GACrDrI,EAAsBgC,iBAAiB,QAASqG,GAGhD9F,QAAQ+H,IAAI,CHzHH3H,EAAQ,GAADF,OAAI4B,EAAOC,QAAO,aAAa,CAC3CC,QAASF,EAAOE,UAMX5B,EAAQ,GAADF,OAAI4B,EAAOC,QAAO,UAAU,CACxCC,QAASF,EAAOE,YGkHjBxB,MAAM,SAACwH,GACN,OAAOA,CACT,IACCxH,MAAM,SAACwH,GACN,IAAMC,EAAOD,EAAiB,GAC9BrJ,EAAa6I,MAAQ,yBAAHtH,OAA4B+H,EAAKb,OAAM,KACzDxI,EAAaqC,YAAc,GAAHf,OAAM+H,EAAK/J,MACnCW,EAAWoC,YAAc,GAAHf,OAAM+H,EAAKlB,OAEnBiB,EAAiB,GACzBrC,SAAS,SAAArD,GACb,IAAMG,EAAcJ,EAAWC,EAAM2F,EAAU,IAAGpC,EAAc3D,GAEhEpF,EAAWoL,OAAOzF,EAEpB,GACF,IACChB,OAAO,SAACC,GACPC,QAAQkC,IAAInC,EACd,G","sources":["webpack://mesto-project-ff/./src/scripts/constants.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/utils.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const validConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n}\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst placesList = document.querySelector('.places__list');\r\n\r\nconst sectionProfile = document.querySelector('.profile');\r\nconst buttonEditProfile = sectionProfile.querySelector('.profile__edit-button');\r\nconst buttonAddNewCard = sectionProfile.querySelector('.profile__add-button');\r\n\r\nconst popupUpdateAvatar = document.querySelector('.popup_type_update-avatar');\r\nconst bttnClosePopupUpdateAvatar = popupUpdateAvatar.querySelector('.popup__close');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst bttnClosePopupEdit = popupEdit.querySelector('.popup__close');\r\n\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst bttnClosePopupNewCard = popupNewCard.querySelector('.popup__close');\r\n\r\nconst popupConfirm = document.querySelector('.popup_type_confirm');\r\nconst bttnClosePopupConfirm = popupConfirm.querySelector('.popup__close');\r\nconst formConfirm = document.querySelector('form[name=confirm]');\r\n\r\nconst popupImage = document.querySelector('.popup_type_image');\r\nconst captionPopup = popupImage.querySelector('.popup__caption');\r\nconst imgOfPopup = popupImage.querySelector('.popup__image');\r\nconst bttnClosePopupImage = popupImage.querySelector('.popup__close');\r\n\r\nconst formEditProfile = document.querySelector('form[name=edit-profile]');\r\nconst nameInput = formEditProfile.elements.name;\r\nconst jobInput = formEditProfile.elements.description;\r\n\r\nconst formUpdateAvatar = document.querySelector('form[name=update-avatar]');\r\nconst linkImageInput = formUpdateAvatar.elements['link-img'];\r\n\r\nconst formNewPlace = document.querySelector('form[name=new-place]');\r\nconst namePlaceInput = formNewPlace.elements['place-name'];\r\nconst linkInput = formNewPlace.elements.link;\r\n\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileJob = document.querySelector('.profile__description');\r\n\r\nexport {\r\nvalidConfig,\r\n\r\ncardTemplate, // in card.js\r\nplacesList,\r\n\r\nbuttonEditProfile,\r\nbuttonAddNewCard,\r\n\r\npopupUpdateAvatar,\r\nbttnClosePopupUpdateAvatar,\r\n\r\npopupEdit,\r\nbttnClosePopupEdit,\r\n\r\npopupNewCard,\r\nbttnClosePopupNewCard,\r\n\r\npopupConfirm,\r\nbttnClosePopupConfirm,\r\nformConfirm, // in card.js\r\n\r\npopupImage,\r\ncaptionPopup,\r\nimgOfPopup,\r\nbttnClosePopupImage,\r\n\r\nformEditProfile,\r\nnameInput,\r\njobInput,\r\n\r\nformUpdateAvatar,\r\nlinkImageInput,\r\n\r\nformNewPlace,\r\nnamePlaceInput,\r\nlinkInput,\r\n\r\nprofileImage,\r\nprofileTitle,\r\nprofileJob,\r\n}\r\n","function closeEscPopup (evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popupIsOpened = document.querySelector('.popup_is-opened');\r\n    closeModal(popupIsOpened);\r\n  }\r\n}\r\n\r\nfunction closeOverlayPopup (evt) {\r\n  if (evt.target === evt.currentTarget) {\r\n    closeModal(evt.currentTarget);\r\n  }\r\n}\r\n\r\nfunction openModal (popup) {\r\n  popup.classList.add('popup_is-opened', 'popup_is-animated');\r\n  popup.addEventListener('click', closeOverlayPopup);\r\n  document.addEventListener('keydown', closeEscPopup);\r\n}\r\n\r\nfunction closeModal (popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  popup.removeEventListener('click', closeOverlayPopup);\r\n  document.removeEventListener('keydown', closeEscPopup);\r\n}\r\n\r\nexport {openModal, closeModal};\r\n\r\n","import {closeModal} from './modal.js';\r\n\r\n//функция проверки ответа\r\nexport function checkResponse (res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\n//универсальная функция запроса fetch с проверкой ответа \r\nexport function request(url, option) {\r\n  return fetch (url, option).then(checkResponse) \r\n}\r\n\r\n// можно сделать универсальную функцию управления текстом кнопки с 3 и 4 необязательными аргументами\r\nexport function renderLoading(isLoading, button, buttonText='Сохранить', loadingText='Сохранение...') {\r\n  if (isLoading) {\r\n    button.textContent = loadingText\r\n  } else {\r\n    button.textContent = buttonText\r\n  }\r\n}\r\n\r\n// можно сделать универсальную функцию, которая принимает функцию запроса, объект события и текст во время загрузки\r\nexport function handleSubmit(request, evt, loadingText = \"Сохранение...\") {\r\n  // всегда нужно предотвращать перезагрузку формы при сабмите\r\n  evt.preventDefault();\r\n   // универсально получаем кнопку сабмита из `evt`\r\n  const submitButton = evt.submitter;\r\n   // записываем начальный текст кнопки до вызова запроса\r\n  const initialText = submitButton.textContent;\r\n   // изменяем текст кнопки до вызова запроса\r\n  renderLoading(true, submitButton, initialText, loadingText);\r\n  request()\r\n    .then(() => {\r\n       // любую форму нужно очищать после успешного ответа от сервера\r\n       // а также `reset` может запустить деактивацию кнопки сабмита (смотрите в `validate.js`)\r\n      evt.target.reset();\r\n      closeModal(evt.target.closest('.popup'));\r\n    })\r\n    .catch((err) => {\r\n       // в каждом запросе нужно ловить ошибку\r\n      console.error(`Ошибка: ${err}`);\r\n    })\r\n     // в каждом запросе в `finally` нужно возвращать обратно начальный текст кнопки\r\n    .finally(() => {\r\n      renderLoading(false, submitButton, initialText);\r\n    });\r\n}","import {request} from './utils.js';\r\n\r\nconst config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-7',\r\n  headers: {\r\n    authorization: 'b27457ff-8e1d-494d-8bc0-af82cbd7f253',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n//Promise запроса данных пользователя \r\nfunction getUser () {\r\n  return request(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\n//Promise запроса карточек \r\nfunction getInitialCards () {\r\n  return request(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на обновление данных о пользователе на сервере\r\nfunction editeProfileServer (nameUser, aboutUser) {\r\n  return request(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${nameUser}`,\r\n      about: `${aboutUser}`\r\n    })\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на добавление новой карточки на сервер\r\nfunction addNewPlaceServer (namePlace, link) {\r\n  return request(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${namePlace}`,\r\n      link: `${link}`\r\n    })\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на удаление карточки на сервер\r\nfunction deleteCardServer (cardId) {\r\n  return request(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на добавление like на сервер\r\nfunction addLikeServer (card) {\r\n  return request(`${config.baseUrl}/cards/likes/${card['_id']}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на удаление like на сервер\r\nfunction deleteLikeServer (card) {\r\n  return request(`${config.baseUrl}/cards/likes/${card['_id']}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n}\r\n\r\n//Функция отправки запроса на смену аватара на сервер\r\nfunction updateAvatarServer (valuelinkImage) {\r\n    return request(`${config.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n        avatar: `${valuelinkImage}`\r\n      })\r\n    })\r\n}\r\n\r\n//Функция, проверяющая, что ссылка на картинку\r\nfunction validateLinkImg (valuelinkImage) {\r\n  return fetch(`https://corsproxy.org/?${valuelinkImage}`, {\r\n    method: 'HEAD'\r\n  })\r\n  .then ((res) => {\r\n    if (res.ok) {\r\n      return res.headers\r\n    }\r\n  return Promise.reject(`Запрос не выполнен, ошибка: ${res.status}`);\r\n  })\r\n  .then ((headers) => {\r\n    if (headers.get('Content-type').includes('image')) {\r\n      return updateAvatarServer (valuelinkImage)\r\n    }\r\n  return Promise.reject(`Ссылка не на изображение, ошибка: ${res.status}`);\r\n  })\r\n}\r\n\r\nexport {\r\n  getUser, \r\n  getInitialCards, \r\n  editeProfileServer, \r\n  addNewPlaceServer, \r\n  deleteCardServer, \r\n  addLikeServer, \r\n  deleteLikeServer,\r\n  updateAvatarServer,\r\n  validateLinkImg\r\n}","import {cardTemplate, popupConfirm} from './constants.js';\r\nimport {addLikeServer, deleteLikeServer} from './api.js';\r\nimport {openModal} from './modal.js';\r\n\r\nfunction delCard (cardItem) {\r\n  cardItem.remove();\r\n}\r\n\r\nfunction likeCard (bttnLike) {\r\n  bttnLike.classList.toggle('card__like-button_is-active');\r\n}\r\n\r\nfunction getCardTemplate (templateCard) {\r\n  return templateCard.querySelector('.places__item').cloneNode(true);\r\n}\r\n\r\nfunction deletebuttonCardDel (cardUserId, userId, buttonCardDel) {\r\n  if (cardUserId !== userId) {\r\n    buttonCardDel.remove()\r\n  }\r\n}\r\n\r\nfunction setCurrentStatusMyLike (card, userId, buttonlikeCard) {\r\n  if (checkMyLike (card, userId)) {\r\n    buttonlikeCard.classList.add('card__like-button_is-active');\r\n  } else {\r\n    buttonlikeCard.classList.remove('card__like-button_is-active');\r\n  }\r\n}\r\n\r\nfunction checkMyLike (card, userId) {\r\n  const likes = card.likes;\r\n  return likes.some ((like) => {\r\n    if (like['_id'] === userId) {\r\n      return true;\r\n    }\r\n    return false;\r\n  })\r\n}\r\n\r\nfunction changeStatusMyLike (card, buttonlikeCard, likeCounter, likeCard) {\r\n  if (buttonlikeCard.classList.contains('card__like-button_is-active')) {\r\n    deleteLikeServer (card)\r\n      .then ((updatedСard) => {\r\n        likeCard(buttonlikeCard);\r\n        likeCounter.textContent = updatedСard.likes.length;\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка: ${err}`)\r\n      })\r\n  } else {\r\n    addLikeServer (card)\r\n      .then ((updatedСard) => {\r\n        likeCard(buttonlikeCard);\r\n        likeCounter.textContent = updatedСard.likes.length;\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка: ${err}`)\r\n      })\r\n    }\r\n}\r\n\r\nfunction createCard(card, userId ,openImagePopup, likeCard) {\r\n  const cardElement = getCardTemplate(cardTemplate);\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const imgCard = cardElement.querySelector('.card__image');\r\n  const buttonCardDel = cardElement.querySelector('.card__delete-button');\r\n  const buttonlikeCard = cardElement.querySelector('.card__like-button');\r\n  const likeCounter = cardElement.querySelector('.card__like-counter');\r\n  const idUserCreateCard = card.owner['_id'];\r\n  const counterLikes = card.likes.length;\r\n\r\n  cardElement.id = card['_id'];\r\n\r\n  cardTitle.textContent = `${card.name}`;\r\n  likeCounter.textContent = `${counterLikes}`;\r\n  imgCard.src = `${card.link}`;\r\n  imgCard.alt = `Фото: ${card.name}`;\r\n  imgCard.addEventListener('click', openImagePopup);\r\n\r\n  buttonCardDel.addEventListener('click', () => {\r\n    popupConfirm.dataset.cardId = cardElement.id;\r\n    openModal (popupConfirm);\r\n  })\r\n  \r\n  buttonlikeCard.addEventListener('click', (evt) => {\r\n    changeStatusMyLike (card, evt.target, likeCounter, likeCard);\r\n  });\r\n\r\n  deletebuttonCardDel (idUserCreateCard, userId, buttonCardDel); //Удалили иконку кнопки удаления на карточке\r\n  setCurrentStatusMyLike (card, userId, buttonlikeCard) //Установили текущий статус моего лайка\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport {createCard, delCard, likeCard};","const showInputError = (formElement, inputElement, errorConfig, errorMessage) => {\r\n  const {inputErrorClass, errorClass} = errorConfig;\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, errorConfig, inputElement) => {\r\n  const {inputErrorClass, errorClass} = errorConfig;\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(inputErrorClass);\r\n  errorElement.classList.remove(errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst checkInputValidityPattern = (inputElement) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n      inputElement.setCustomValidity('');\r\n  }\r\n}\r\n\r\nconst checkInputValidity = (formElement, inputElement, errorConfig) => {\r\n  checkInputValidityPattern(inputElement);\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, errorConfig, inputElement.validationMessage);\r\n  } else {\r\n    hideInputError(formElement, errorConfig, inputElement);\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !(inputElement.validity.valid);\r\n  });\r\n}\r\n\r\nconst toggleButtonState = (inputList, buttonElement, inactiveButtonClass) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(inactiveButtonClass);\r\n    buttonElement.setAttribute('disabled', true);\r\n  } else {\r\n    buttonElement.classList.remove(inactiveButtonClass);\r\n    buttonElement.removeAttribute('disabled', true);\r\n  }\r\n}\r\n\r\nconst setEventListeners = (formElement, formConfig) => {\r\n  const {inputSelector, submitButtonSelector, inactiveButtonClass, ...errorConfig} = formConfig;\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  const buttonElement = formElement.querySelector(submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, inactiveButtonClass);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, errorConfig);\r\n\r\n      toggleButtonState(inputList, buttonElement, inactiveButtonClass);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const {formSelector, ...formConfig} = validationConfig;\r\n  const formList = Array.from(document.querySelectorAll(formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, formConfig);\r\n  });\r\n};\r\n\r\nexport function clearValidation (formElement, validationConfig) {\r\n  const {submitButtonSelector, inputSelector, inactiveButtonClass, ...errorConfig} = validationConfig;\r\n  const buttonElement = formElement.querySelector(submitButtonSelector);\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, errorConfig, inputElement)\r\n    inputElement.setCustomValidity('');\r\n  });\r\n  toggleButtonState(inputList, buttonElement, inactiveButtonClass);\r\n}\r\n\r\n","import '../pages/index.css'; // импорт главного файла стилей\r\nimport {createCard, delCard, likeCard} from './card.js';\r\nimport {openModal, closeModal} from './modal.js';\r\nimport {enableValidation, clearValidation} from './validation.js';\r\nimport {getUser, getInitialCards, editeProfileServer, addNewPlaceServer, deleteCardServer,validateLinkImg} from './api.js';\r\nimport {handleSubmit} from './utils.js';\r\nimport {\r\n  validConfig,\r\n  placesList,\r\n  buttonEditProfile,\r\n  buttonAddNewCard,\r\n  popupUpdateAvatar,\r\n  bttnClosePopupUpdateAvatar,\r\n  popupEdit,\r\n  bttnClosePopupEdit,\r\n  popupNewCard,\r\n  bttnClosePopupNewCard,\r\n  popupConfirm,\r\n  bttnClosePopupConfirm,\r\n  formConfirm,\r\n  popupImage,\r\n  captionPopup,\r\n  imgOfPopup,\r\n  bttnClosePopupImage,\r\n  formEditProfile,\r\n  nameInput,\r\n  jobInput,\r\n  formUpdateAvatar,\r\n  linkImageInput,\r\n  formNewPlace,\r\n  namePlaceInput,\r\n  linkInput,\r\n  profileImage,\r\n  profileTitle,\r\n  profileJob,\r\n  } from './constants.js'\r\n\r\n//Обработчик открытия popup с img - начало\r\nfunction openPopupImg (evt) {\r\n  imgOfPopup.src = evt.target.src;\r\n  imgOfPopup.alt = evt.target.alt;\r\n  captionPopup.textContent = evt.target.closest('.places__item').textContent;\r\n  openModal(popupImage);\r\n}\r\n\r\n//Активация валидации\r\nenableValidation(validConfig);\r\n\r\n//Открытие и редактирование профиля - начало\r\nbuttonEditProfile.addEventListener('click', () => {\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileJob.textContent;\r\n  clearValidation (formEditProfile, validConfig);\r\n  openModal(popupEdit); \r\n});\r\n\r\nfunction handleProfileFormSubmit(evt) {\r\n  const valueName = nameInput.value;\r\n  const valueJob = jobInput.value;\r\n  // создаем функцию, которая возвращает промис, так как любой запрос возвращает его \r\n  function makeRequest() {\r\n    // return позволяет потом дальше продолжать цепочку `then, catch, finally`\r\n    return editeProfileServer (valueName, valueJob).then((userData) => {\r\n      profileTitle.textContent = userData.name;\r\n      profileJob.textContent = userData.about;\r\n    });\r\n  }\r\n  // вызываем универсальную функцию, передавая в нее запрос, событие и текст изменения кнопки (если нужен другой, а не `\"Сохранение...\"`)\r\n  handleSubmit(makeRequest, evt);\r\n}\r\nformEditProfile.addEventListener('submit', handleProfileFormSubmit);\r\n\r\n//Обновление аватара - начало\r\nprofileImage.addEventListener('click', () => {\r\n  linkImageInput.value = '';\r\n  clearValidation (formUpdateAvatar, validConfig);\r\n  openModal(popupUpdateAvatar);\r\n});\r\nfunction handleUpdateAvatarFormSubmit(evt) {\r\n  const valuelinkImage = linkImageInput.value;\r\n  function makeRequest () {\r\n    return validateLinkImg (valuelinkImage).then ((newLinkImg) => {\r\n      profileImage.style = `background-image: url(${newLinkImg.avatar})`;\r\n    })\r\n  }\r\n  handleSubmit(makeRequest, evt)\r\n}\r\nformUpdateAvatar.addEventListener('submit', handleUpdateAvatarFormSubmit);\r\n\r\n//Открытие и добавление новой карточки - начало\r\nbuttonAddNewCard.addEventListener('click', () => {\r\n  namePlaceInput.value = '';\r\n  linkInput.value = '';\r\n  clearValidation (formNewPlace, validConfig);\r\n  openModal(popupNewCard);\r\n});\r\nfunction handleNewPlaceFormSubmit(evt) {\r\n  const valueNamePlace = namePlaceInput.value;\r\n  const valueLink = linkInput.value;\r\n  function makeRequest () {\r\n    return addNewPlaceServer (valueNamePlace, valueLink).then((newCard) => {\r\n      placesList.prepend(createCard(newCard, newCard.owner['_id'], openPopupImg, likeCard));  \r\n    }) \r\n  }\r\n  handleSubmit(makeRequest, evt)\r\n}\r\nformNewPlace.addEventListener('submit', handleNewPlaceFormSubmit);\r\n\r\n//Подтверждение удаления карточки - начало\r\nfunction handleConfirmFormSubmit(evt) {\r\n  const loadingText = \"Удаление...\"\r\n  const cardId = popupConfirm.dataset.cardId;\r\n  const card = placesList.querySelector(`[id=\"${cardId}\"]`);\r\n  function makeRequest () {\r\n    return deleteCardServer(cardId).then (() => {\r\n      delCard(card);\r\n    })\r\n  }\r\n  handleSubmit(makeRequest, evt, loadingText);\r\n}\r\nformConfirm.addEventListener('submit', handleConfirmFormSubmit);\r\n\r\n//Закрытие Popup по кнопке \"X\"- начало\r\nfunction identifyPopupForClose (evt) {\r\n  closeModal(evt.target.closest('.popup'));\r\n}\r\nbttnClosePopupEdit.addEventListener('click', identifyPopupForClose);\r\nbttnClosePopupNewCard.addEventListener('click', identifyPopupForClose);\r\nbttnClosePopupImage.addEventListener('click', identifyPopupForClose);\r\nbttnClosePopupUpdateAvatar.addEventListener('click', identifyPopupForClose);\r\nbttnClosePopupConfirm.addEventListener('click', identifyPopupForClose);\r\n\r\n//Загрузка карточек и данных пользователя с сервера при открытии страницы - начало\r\nPromise.all([getUser(), getInitialCards()])\r\n  .then ((resultOfPromises) => {\r\n    return resultOfPromises;\r\n  })\r\n  .then ((resultOfPromises) => {\r\n    const user = resultOfPromises[0];\r\n    profileImage.style = `background-image: url(${user.avatar})`;\r\n    profileTitle.textContent = `${user.name}`;\r\n    profileJob.textContent = `${user.about}`\r\n\r\n    const cards = resultOfPromises[1];\r\n    cards.forEach( card => {\r\n      const cardElement = createCard(card, user['_id'] ,openPopupImg, likeCard);\r\n      \r\n      placesList.append(cardElement)\r\n      \r\n    })\r\n  })\r\n  .catch ((err) => {\r\n    console.log(err);\r\n  })"],"names":["validConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","cardTemplate","document","querySelector","content","placesList","sectionProfile","buttonEditProfile","buttonAddNewCard","popupUpdateAvatar","bttnClosePopupUpdateAvatar","popupEdit","bttnClosePopupEdit","popupNewCard","bttnClosePopupNewCard","popupConfirm","bttnClosePopupConfirm","formConfirm","popupImage","captionPopup","imgOfPopup","bttnClosePopupImage","formEditProfile","nameInput","elements","name","jobInput","description","formUpdateAvatar","linkImageInput","formNewPlace","namePlaceInput","linkInput","link","profileImage","profileTitle","profileJob","closeEscPopup","evt","key","closeModal","closeOverlayPopup","target","currentTarget","openModal","popup","classList","add","addEventListener","remove","removeEventListener","checkResponse","res","ok","json","Promise","reject","concat","status","request","url","option","fetch","then","renderLoading","isLoading","button","buttonText","arguments","length","undefined","loadingText","textContent","handleSubmit","preventDefault","submitButton","submitter","initialText","reset","closest","catch","err","console","error","finally","config","baseUrl","headers","authorization","likeCard","bttnLike","toggle","createCard","card","userId","openImagePopup","cardElement","cloneNode","cardTitle","imgCard","buttonCardDel","buttonlikeCard","likeCounter","idUserCreateCard","owner","counterLikes","likes","id","src","alt","dataset","cardId","contains","method","deleteLikeServer","updatedСard","log","addLikeServer","changeStatusMyLike","cardUserId","deletebuttonCardDel","some","like","checkMyLike","setCurrentStatusMyLike","validationConfig","formConfig","hideInputError","formElement","errorConfig","inputElement","errorElement","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","removeAttribute","setAttribute","clearValidation","_objectWithoutProperties","_excluded3","Array","from","querySelectorAll","forEach","setCustomValidity","openPopupImg","identifyPopupForClose","_excluded","patternMismatch","errorMessage","checkInputValidityPattern","showInputError","validationMessage","checkInputValidity","setEventListeners","value","valueName","valueJob","nameUser","aboutUser","body","JSON","stringify","about","userData","valuelinkImage","get","includes","avatar","updateAvatarServer","validateLinkImg","newLinkImg","style","valueNamePlace","valueLink","namePlace","newCard","prepend","deleteCardServer","all","resultOfPromises","user","append"],"sourceRoot":""}