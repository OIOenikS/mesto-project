{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/constants.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const validConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n}\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\nconst placesList = document.querySelector('.places__list');\r\n\r\nconst sectionProfile = document.querySelector('.profile');\r\nconst buttonEditProfile = sectionProfile.querySelector('.profile__edit-button');\r\nconst buttonAddNewCard = sectionProfile.querySelector('.profile__add-button');\r\n\r\nconst popupUpdateAvatar = document.querySelector('.popup_type_update-avatar');\r\nconst bttnClosePopupUpdateAvatar = popupUpdateAvatar.querySelector('.popup__close');\r\n\r\nconst popupEdit = document.querySelector('.popup_type_edit');\r\nconst bttnClosePopupEdit = popupEdit.querySelector('.popup__close');\r\n\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst bttnClosePopupNewCard = popupNewCard.querySelector('.popup__close');\r\n\r\nconst popupConfirm = document.querySelector('.popup_type_confirm');\r\nconst bttnClosePopupConfirm = popupConfirm.querySelector('.popup__close');\r\nconst formConfirm = document.querySelector('form[name=confirm]');\r\n\r\nconst popupImage = document.querySelector('.popup_type_image');\r\nconst captionPopup = popupImage.querySelector('.popup__caption');\r\nconst imgOfPopup = popupImage.querySelector('.popup__image');\r\nconst bttnClosePopupImage = popupImage.querySelector('.popup__close');\r\n\r\nconst formEditProfile = document.querySelector('form[name=edit-profile]');\r\nconst nameInput = formEditProfile.elements.name;\r\nconst jobInput = formEditProfile.elements.description;\r\nconst bttnSaveEditProfile = formEditProfile.elements.save;\r\n\r\nconst formUpdateAvatar = document.querySelector('form[name=update-avatar]');\r\nconst linkImageInput = formUpdateAvatar.elements['link-img'];\r\n\r\nconst formNewPlace = document.querySelector('form[name=new-place]');\r\nconst namePlaceInput = formNewPlace.elements['place-name'];\r\nconst linkInput = formNewPlace.elements.link;\r\n\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileJob = document.querySelector('.profile__description');\r\n\r\nexport {\r\nvalidConfig,\r\n\r\ncardTemplate, // in card.js\r\nplacesList,\r\n\r\nbuttonEditProfile,\r\nbuttonAddNewCard,\r\n\r\npopupUpdateAvatar,\r\nbttnClosePopupUpdateAvatar,\r\n\r\npopupEdit,\r\nbttnClosePopupEdit,\r\n\r\npopupNewCard,\r\nbttnClosePopupNewCard,\r\n\r\npopupConfirm,\r\nbttnClosePopupConfirm,\r\nformConfirm, // in card.js\r\n\r\npopupImage,\r\ncaptionPopup,\r\nimgOfPopup,\r\nbttnClosePopupImage,\r\n\r\nformEditProfile,\r\nnameInput,\r\njobInput,\r\nbttnSaveEditProfile,\r\n\r\nformUpdateAvatar,\r\nlinkImageInput,\r\n\r\nformNewPlace,\r\nnamePlaceInput,\r\nlinkInput,\r\n\r\nprofileImage,\r\nprofileTitle,\r\nprofileJob,\r\n}\r\n","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-7',\r\n  headers: {\r\n    authorization: 'b27457ff-8e1d-494d-8bc0-af82cbd7f253',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n//Promise запроса данных пользователя \r\nfunction getUser () {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`При запросе информации о пользователе с сервера, возникла ошибка: ${res.status}`);\r\n    });\r\n}\r\n\r\n//Promise запроса карточек \r\nfunction getInitialCards () {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`При загрузке данных карточек с сервера, возникла ошибка: ${res.status}`);\r\n    });\r\n}\r\n\r\n//Функция отправки запроса на обновление данных о пользователе на сервере\r\nfunction editeProfileServer (nameUser, aboutUser) {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${nameUser}`,\r\n      about: `${aboutUser}`\r\n    })\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`При запросе на обновление данных о пользователе на сервере, возникла ошибка: ${res.status}`);\r\n  });\r\n}\r\n\r\n//Функция отправки запроса на добавление новой карточки на сервер\r\nfunction addNewPlaceServer (namePlace, link) {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${namePlace}`,\r\n      link: `${link}`\r\n    })\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`При запросе на добавление новой карточки на сервер, возникла ошибка: ${res.status}`);\r\n  });\r\n}\r\n\r\n//Функция отправки запроса на удаление карточки на сервер\r\nfunction deleteCardServer (cardId) {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`При запросе на удаление карточки на сервере, возникла ошибка: ${res.status}`);\r\n  });\r\n}\r\n\r\n//Функция отправки запроса на добавление like на сервер\r\nfunction addLikeServer (card) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${card['_id']}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`При запросе на добавление Like, возникла ошибка: № ${res.status}`);\r\n  });\r\n}\r\n\r\n//Функция отправки запроса на удаление like на сервер\r\nfunction deleteLikeServer (card) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${card['_id']}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`При запросе на удаление Like, возникла ошибка: № ${res.status}`);\r\n  });\r\n}\r\n\r\n//Функция отправки запроса на смену аватара на сервер\r\nfunction updateAvatarServer (valuelinkImage) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: `${valuelinkImage}`\r\n    })\r\n  })\r\n  .then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`При запросе на смену аватара на сервер, \r\n      возникла ошибка: № ${res.status}`);\r\n  });\r\n}\r\n\r\nexport {\r\n  getUser, \r\n  getInitialCards, \r\n  editeProfileServer, \r\n  addNewPlaceServer, \r\n  deleteCardServer, \r\n  addLikeServer, \r\n  deleteLikeServer,\r\n  updateAvatarServer\r\n}","function closeEscPopup (evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popupIsOpened = document.querySelector('.popup_is-opened');\r\n    closeModal(popupIsOpened);\r\n  }\r\n}\r\n\r\nfunction closeOverlayPopup (evt) {\r\n  if (evt.target === evt.currentTarget) {\r\n    closeModal(evt.currentTarget);\r\n  }\r\n}\r\n\r\nfunction openModal (popup) {\r\n  popup.classList.add('popup_is-opened', 'popup_is-animated');\r\n  popup.addEventListener('click', closeOverlayPopup);\r\n  document.addEventListener('keydown', closeEscPopup);\r\n}\r\n\r\nfunction closeModal (popup) {\r\n  popup.classList.remove('popup_is-opened');\r\n  popup.removeEventListener('click', closeOverlayPopup);\r\n  document.removeEventListener('keydown', closeEscPopup);\r\n}\r\n\r\nexport {openModal, closeModal};\r\n\r\n","import {cardTemplate, popupConfirm} from './constants.js';\r\nimport {addLikeServer, deleteLikeServer} from './api.js';\r\nimport {openModal} from './modal.js';\r\n\r\nfunction delCard (cardItem) {\r\n  cardItem.remove();\r\n}\r\n\r\nfunction likeCard (bttnLike) {\r\n  bttnLike.classList.toggle('card__like-button_is-active');\r\n}\r\n\r\nfunction getCardTemplate (templateCard) {\r\n  return templateCard.querySelector('.places__item').cloneNode(true);\r\n}\r\n\r\nfunction deletebuttonCardDel (cardUserId, userId, buttonCardDel) {\r\n  if (cardUserId !== userId) {\r\n    buttonCardDel.remove()\r\n  }\r\n}\r\n\r\nfunction setCurrentStatusMyLike (card, userId, buttonlikeCard) {\r\n  if (checkMyLike (card, userId)) {\r\n    buttonlikeCard.classList.add('card__like-button_is-active');\r\n  } else {\r\n    buttonlikeCard.classList.remove('card__like-button_is-active');\r\n  }\r\n}\r\n\r\nfunction checkMyLike (card, userId) {\r\n  const likes = card.likes;\r\n  return likes.some ((like) => {\r\n    if (like['_id'] === userId) {\r\n      return true;\r\n    }\r\n    return false;\r\n  })\r\n}\r\n\r\nfunction changeStatusMyLike (card, buttonlikeCard, likeCounter, likeCard) {\r\n  if (buttonlikeCard.classList.contains('card__like-button_is-active')) {\r\n    deleteLikeServer (card)\r\n      .then ((updatedСard) => {\r\n        likeCard(buttonlikeCard);\r\n        likeCounter.textContent = updatedСard.likes.length;\r\n      })\r\n  } else {\r\n    addLikeServer (card)\r\n      .then ((updatedСard) => {\r\n        likeCard(buttonlikeCard);\r\n        likeCounter.textContent = updatedСard.likes.length;\r\n      })\r\n  }\r\n}\r\n\r\nfunction createCard(card, userId ,openImagePopup, likeCard) {\r\n  const cardElement = getCardTemplate(cardTemplate);\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const imgCard = cardElement.querySelector('.card__image');\r\n  const buttonCardDel = cardElement.querySelector('.card__delete-button');\r\n  const buttonlikeCard = cardElement.querySelector('.card__like-button');\r\n  const likeCounter = cardElement.querySelector('.card__like-counter');\r\n  const idUserCreateCard = card.owner['_id'];\r\n  const counterLikes = card.likes.length;\r\n\r\n  cardElement.id = card['_id'];\r\n\r\n  cardTitle.textContent = `${card.name}`;\r\n  likeCounter.textContent = `${counterLikes}`;\r\n  imgCard.src = `${card.link}`;\r\n  imgCard.alt = `Фото: ${card.name}`;\r\n  imgCard.addEventListener('click', openImagePopup);\r\n\r\n  buttonCardDel.addEventListener('click', () => {\r\n    popupConfirm.dataset.cardId = cardElement.id;\r\n    openModal (popupConfirm);\r\n  })\r\n  \r\n  buttonlikeCard.addEventListener('click', (evt) => {\r\n    changeStatusMyLike (card, evt.target, likeCounter, likeCard);\r\n  });\r\n\r\n  deletebuttonCardDel (idUserCreateCard, userId, buttonCardDel); //Удалили иконку кнопки удаления на карточке\r\n  setCurrentStatusMyLike (card, userId, buttonlikeCard) //Установили текущий статус моего лайка\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport {createCard, delCard, likeCard};","const showInputError = (formElement, inputElement, errorConfig, errorMessage) => {\r\n  const {inputErrorClass, errorClass} = errorConfig;\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, errorConfig, inputElement) => {\r\n  const {inputErrorClass, errorClass} = errorConfig;\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(inputErrorClass);\r\n  errorElement.classList.remove(errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst checkInputValidityPattern = (inputElement) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n      inputElement.setCustomValidity('');\r\n  }\r\n}\r\n\r\nconst checkInputValidity = (formElement, inputElement, errorConfig) => {\r\n  checkInputValidityPattern(inputElement);\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, errorConfig, inputElement.validationMessage);\r\n  } else {\r\n    hideInputError(formElement, errorConfig, inputElement);\r\n  }\r\n};\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !(inputElement.validity.valid);\r\n  });\r\n}\r\n\r\nconst toggleButtonState = (inputList, buttonElement, inactiveButtonClass) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(inactiveButtonClass);\r\n  } else {\r\n    buttonElement.classList.remove(inactiveButtonClass);\r\n  }\r\n}\r\n\r\nconst setEventListeners = (formElement, formConfig) => {\r\n  const {inputSelector, submitButtonSelector, inactiveButtonClass, ...errorConfig} = formConfig;\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  const buttonElement = formElement.querySelector(submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, inactiveButtonClass);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement, inputElement, errorConfig);\r\n\r\n      toggleButtonState(inputList, buttonElement, inactiveButtonClass);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  const {formSelector, ...formConfig} = validationConfig;\r\n  const formList = Array.from(document.querySelectorAll(formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, formConfig);\r\n  });\r\n};\r\n\r\nexport function clearValidation (formElement, validationConfig) {\r\n  const {submitButtonSelector, inputSelector, inactiveButtonClass, ...errorConfig} = validationConfig;\r\n  const buttonElement = formElement.querySelector(submitButtonSelector);\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, errorConfig, inputElement)\r\n    inputElement.setCustomValidity('');\r\n  });\r\n  toggleButtonState(inputList, buttonElement, inactiveButtonClass);\r\n}\r\n\r\n","import '../pages/index.css'; // импорт главного файла стилей\r\nimport {createCard, delCard, likeCard} from './card.js';\r\nimport {openModal, closeModal} from './modal.js';\r\nimport {enableValidation, clearValidation} from './validation.js';\r\nimport {getUser, getInitialCards, editeProfileServer, addNewPlaceServer, updateAvatarServer, deleteCardServer} from './api.js';\r\nimport {\r\n  validConfig,\r\n  placesList,\r\n  buttonEditProfile,\r\n  buttonAddNewCard,\r\n  popupUpdateAvatar,\r\n  bttnClosePopupUpdateAvatar,\r\n  popupEdit,\r\n  bttnClosePopupEdit,\r\n  popupNewCard,\r\n  bttnClosePopupNewCard,\r\n  popupConfirm,\r\n  bttnClosePopupConfirm,\r\n  formConfirm,\r\n  popupImage,\r\n  captionPopup,\r\n  imgOfPopup,\r\n  bttnClosePopupImage,\r\n  formEditProfile,\r\n  nameInput,\r\n  jobInput,\r\n  bttnSaveEditProfile,\r\n  formUpdateAvatar,\r\n  linkImageInput,\r\n  formNewPlace,\r\n  namePlaceInput,\r\n  linkInput,\r\n  profileImage,\r\n  profileTitle,\r\n  profileJob,\r\n  } from './constants.js'\r\n  \r\n\r\nfunction renderLoading (isLoading) {\r\n  if (isLoading) {\r\n    bttnSaveEditProfile.textContent = 'Сохранение...';\r\n  } else {\r\n      bttnSaveEditProfile.textContent = 'Сохранить';\r\n  }\r\n}\r\n\r\n//Обработчик открытия popup с img - начало\r\nfunction openPopupImg (evt) {\r\n  imgOfPopup.src = evt.target.src;\r\n  imgOfPopup.alt = evt.target.alt;\r\n  captionPopup.textContent = evt.target.closest('.places__item').textContent;\r\n  openModal(popupImage);\r\n}\r\n\r\n//Активация валидации\r\nenableValidation(validConfig);\r\n\r\n//Открытие и редактирование профиля - начало\r\nbuttonEditProfile.addEventListener('click', () => {\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileJob.textContent;\r\n  clearValidation (formEditProfile, validConfig);\r\n  openModal(popupEdit); \r\n});\r\nfunction handleFormEditProfileSubmit(evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true);\r\n  const valueName = nameInput.value;\r\n  const valueJob = jobInput.value;\r\n  editeProfileServer (valueName, valueJob)\r\n    .then (() => {\r\n      profileTitle.textContent = valueName;\r\n      profileJob.textContent = valueJob;\r\n    })\r\n    .finally (\r\n      renderLoading(false)\r\n    )\r\n  closeModal(evt.target.closest('.popup'));\r\n}\r\nformEditProfile.addEventListener('submit', handleFormEditProfileSubmit);\r\n\r\n//Открытие и редактирование аватара - начало\r\nprofileImage.addEventListener('click', () => {\r\n  linkImageInput.value = '';\r\n  clearValidation (formUpdateAvatar, validConfig);\r\n  openModal(popupUpdateAvatar);\r\n})\r\nfunction handleFormEditProfileImageSubmit(evt) {\r\n  evt.preventDefault();\r\n  const valuelinkImage = linkImageInput.value;\r\n  updateAvatarServer (valuelinkImage)\r\n    .then (() => {\r\n      profileImage.style = `background-image: url(${valuelinkImage})`;\r\n    })\r\n  closeModal(evt.target.closest('.popup'));\r\n}\r\nformUpdateAvatar.addEventListener('submit', handleFormEditProfileImageSubmit);\r\n\r\n//Открытие и добавление новой карточки - начало\r\nbuttonAddNewCard.addEventListener('click', () => {\r\n  namePlaceInput.value = '';\r\n  linkInput.value = '';\r\n  clearValidation (formNewPlace, validConfig);\r\n  openModal(popupNewCard);\r\n});\r\nfunction handleFormNewPlaceSubmit(evt) {\r\n  evt.preventDefault();\r\n  const valueNamePlace = namePlaceInput.value;\r\n  const valueLink = linkInput.value;\r\n  addNewPlaceServer (valueNamePlace, valueLink)\r\n    .then ((newCard) => {\r\n      placesList.prepend(createCard(newCard, newCard.owner['_id'], openPopupImg, likeCard));\r\n    })\r\n  evt.target.reset();\r\n  closeModal(evt.target.closest('.popup'));\r\n}\r\nformNewPlace.addEventListener('submit', handleFormNewPlaceSubmit);\r\n\r\n//Закрытие Popup по кнопке \"X\"- начало\r\nfunction identifyPopupForClose (evt) {\r\n  closeModal(evt.target.closest('.popup'));\r\n}\r\nbttnClosePopupEdit.addEventListener('click', identifyPopupForClose);\r\nbttnClosePopupNewCard.addEventListener('click', identifyPopupForClose);\r\nbttnClosePopupImage.addEventListener('click', identifyPopupForClose);\r\nbttnClosePopupUpdateAvatar.addEventListener('click', identifyPopupForClose);\r\nbttnClosePopupConfirm.addEventListener('click', identifyPopupForClose);\r\n\r\n//Загрузка карточек и данных пользователя с сервера при открытии страницы - начало\r\nPromise.all([getUser(), getInitialCards()])\r\n  .then ((resultOfPromises) => {\r\n    return resultOfPromises;\r\n  })\r\n  .then ((resultOfPromises) => {\r\n    const user = resultOfPromises[0];\r\n    profileImage.style = `background-image: url(${user.avatar})`;\r\n    profileTitle.textContent = `${user.name}`;\r\n    profileJob.textContent = `${user.about}`\r\n\r\n    const cards = resultOfPromises[1];\r\n    cards.forEach( card => {\r\n      const cardElement = createCard(card, user['_id'] ,openPopupImg, likeCard);\r\n      \r\n      placesList.append(cardElement)\r\n      \r\n    })\r\n  })\r\n  .catch ((err) => {\r\n    console.log(err);\r\n  })\r\n\r\n//Подтверждение удаления карточки - начало\r\nfunction handleFormConfirmSubmit(evt) {\r\n    evt.preventDefault();\r\n    const cardId = popupConfirm.dataset.cardId;\r\n    const card = placesList.querySelector(`[id=\"${cardId}\"]`);\r\n      deleteCardServer (cardId)\r\n        .then (() => {\r\n          delCard(card);\r\n          closeModal(popupConfirm);\r\n        })\r\n  }\r\n\r\nformConfirm.addEventListener('submit', handleFormConfirmSubmit);\r\n"],"names":["validConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","cardTemplate","document","querySelector","content","placesList","sectionProfile","buttonEditProfile","buttonAddNewCard","popupUpdateAvatar","bttnClosePopupUpdateAvatar","popupEdit","bttnClosePopupEdit","popupNewCard","bttnClosePopupNewCard","popupConfirm","bttnClosePopupConfirm","formConfirm","popupImage","captionPopup","imgOfPopup","bttnClosePopupImage","formEditProfile","nameInput","elements","name","jobInput","description","bttnSaveEditProfile","save","formUpdateAvatar","linkImageInput","formNewPlace","namePlaceInput","linkInput","link","profileImage","profileTitle","profileJob","config","baseUrl","headers","authorization","closeEscPopup","evt","key","closeModal","closeOverlayPopup","target","currentTarget","openModal","popup","classList","add","addEventListener","remove","removeEventListener","likeCard","bttnLike","toggle","createCard","card","userId","openImagePopup","cardElement","cloneNode","cardTitle","imgCard","buttonCardDel","buttonlikeCard","likeCounter","idUserCreateCard","owner","counterLikes","likes","length","id","textContent","concat","src","alt","dataset","cardId","contains","fetch","method","then","res","ok","json","Promise","reject","status","deleteLikeServer","updatedСard","addLikeServer","changeStatusMyLike","cardUserId","deletebuttonCardDel","some","like","checkMyLike","setCurrentStatusMyLike","validationConfig","formConfig","hideInputError","formElement","errorConfig","inputElement","errorElement","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","clearValidation","_objectWithoutProperties","_excluded3","Array","from","querySelectorAll","forEach","setCustomValidity","renderLoading","isLoading","openPopupImg","closest","identifyPopupForClose","_excluded","patternMismatch","errorMessage","checkInputValidityPattern","showInputError","validationMessage","checkInputValidity","setEventListeners","value","preventDefault","nameUser","aboutUser","valueName","valueJob","body","JSON","stringify","about","finally","valuelinkImage","avatar","updateAvatarServer","style","namePlace","newCard","prepend","reset","all","resultOfPromises","user","append","catch","err","console","log","deleteCardServer"],"sourceRoot":""}